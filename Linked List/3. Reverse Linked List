# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
    
 # Solution 1: 
        
        if not head or not head.next:
            return head

        firstNode = head
        secondNode = firstNode.next
        head.next = None

        while secondNode:
            thirdNode = secondNode.next
            secondNode.next = firstNode
            
            firstNode = secondNode
            secondNode = thirdNode
        
        return firstNode

# Solution 2: 

        node = None
        while head:
            node = ListNode(head.val, node)
            head = head.next
        return node
